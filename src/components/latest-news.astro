---
import type { LatestNews } from "@/types/storyblok";
import { storyblokEditable } from "@storyblok/astro";
import { getNews } from "@/lib/storyblok";
import { formatDate, formatLink } from "@/lib/utils";

interface Props {
  blok: LatestNews;
}

const { blok } = Astro.props;
const news = await getNews(3);
---

<section {...storyblokEditable(blok)}>
  <h2 class="h2 mb-8">{blok.heading}</h2>
  <p class="mb-12 text-xl md:w-2/3 lg:w-1/2">
    {blok.description}
  </p>

  <div class="grid grid-cols-1 gap-8 sm:grid-cols-2 md:grid-cols-3">
    {
      news.map((entry) => (
        <article class="focus-within:outline-3 group relative overflow-hidden rounded-xl shadow-lg after:absolute after:inset-0 after:z-0 after:rounded-xl after:bg-gradient-to-b after:from-transparent after:to-gray-900/80 focus-within:outline focus-within:outline-offset-2 focus-within:outline-primary-900">
          {entry.content.image?.id ? (
            <img
              src={entry.content.image.filename}
              alt={`bild vom ${entry.content.title}`}
              width="400"
              height="400"
              class="aspect-square h-full max-h-72 w-full object-cover transition-transform duration-500 group-hover:scale-110 sm:max-h-none"
            />
          ) : null}

          <div class="absolute inset-0 z-10 flex flex-col justify-end p-4 md:px-8 md:py-6">
            <time datetime={entry.created_at} class="mb-1 text-gray-200">
              {formatDate(entry.created_at)}
            </time>
            <h3 class="h4">
              <a
                href={formatLink(entry.full_slug)}
                class="text-white after:absolute after:inset-0 focus-visible:outline-none"
              >
                {entry.content.title}
              </a>
            </h3>
          </div>
        </article>
      ))
    }
  </div>

  <div class="mt-12 text-center">
    <a href={formatLink(blok.button_link)} class="btn btn-primary">
      {blok.button_text} &rarr;
    </a>
  </div>
</section>
